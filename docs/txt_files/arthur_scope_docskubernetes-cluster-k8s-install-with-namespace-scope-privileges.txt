Content type: arthur_scope_docs
Source: https://docs.arthur.ai/docs/kubernetes-cluster-k8s-install-with-namespace-scope-privileges
 Kubernetes Cluster (K8s) Install with Namespace Scope Privileges
Kubernetes Cluster (K8s) Install with Namespace Scope PrivilegesSuggest EditsIf you would like to install the Arthur platform with namespace scoped privileges, there are certain components that will fail since they will need cluster-level access. These cluster-level components are CRDs (Custom Resource Definitions) which are required for the proper functioning and operation of the Arthur platform. However, these CRDs only need to be installed once with cluster-admin privileges, and elevated access is not required for normal usage of the platform.
ðŸ“˜Both the Admin Console and Arthur application can be installed at the cluster-level or namespace-scope independent of each other.
CRDs leveraged by Arthur Platform
The Arthur platform makes use of the following two CRDs:
Argo Workflows : Kubernetes-native Open-source workflow manager
ClickHouse Operator : Column-oriented OLAP datastore
Installing Admin Console within a Namespace
By default, the Admin Console is installed at the Cluster level, available in all namespaces. If you would like to install the Admin Console only within a specific namespace, you can use the following flag to the kots command:
Shellkubectl kots install arthur \
--use-minimal-rbac
--skip-rbac-check
Since the Admin Console will not have access to the Cluster, certain Preflight checks will fail. The Cluster Admin is responsible for ensuring sufficient resources are provisioned with the correct version of K8s.
Installing Cluster-level CRDs for Arthur from Nexus
Since the Arthur platform requires CRDs for normal operation, these will need to be installed by the Cluster Admin before installing Arthur itself, in no particular order. The instructions below show how to download the CRD charts from our publicly hosted repository.
Argo Workflows:
Shellhelm repo add arthurai-released https://repository.arthur.ai/repository/charts --username <nexus-username> --password <nexus-password>
helm install argo-workflows-crd arthurai-released/argo-workflows-crd --version 0.19.1-arthur-1
ClickHouse Operator:
Shellhelm repo add arthurai-released https://repository.arthur.ai/repository/charts --username <nexus-username> --password <nexus-password>
helm install clickhouse-operator-crd arthurai-released/clickhouse-operator-crd --version 0.19.2-arthur-1
ðŸš§Please reach out to our Sales Team if you do not have credentials to our Nexus repository.
Installing Cluster-level CRDs for Arthur from Airgap Bundle
If you are in an air-gapped environment with no access to the public internet, the CRD charts are also available in the Airgap bundle provided to you. The instructions below show how to extract the charts from the Airgap bundle.
Shelltar -xvf arthur-<version>.airgap
cd arthur-<version>
tar -xvf app.tar.gz
cd app
Argo Workflows:
Shellhelm install argo-workflows-crd argo-workflows-crd-0.14.0-arthur-2.tgz
ClickHouse Operator:
Shellhelm install clickhouse-operator-crd arthurai-released/clickhouse-operator-crd-0.18.4-arthur-2.tgz
You can verify the CRDs have been installed successfully by executing the following command:
Shellkubectl get crd  grep -iE 'argoclickhouse'
Now that we have the prereqs installed with elevated access, we can now switch over to namespace-scoped access to complete the installation either using the Admin Console using the Admin Console or using the CLI.Updated 3 months ago Table of Contents
CRDs leveraged by Arthur Platform
Installing Admin Console within a Namespace
Installing Cluster-level CRDs for Arthur from Nexus
Installing Cluster-level CRDs for Arthur from Airgap Bundle